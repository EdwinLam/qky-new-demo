<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.qky.classgroup.dao.bas.IBasGroupDAO">

    <sql id="Base_Column_List">
        id,
        groupCode,
        groupName,
        introduce,
        memberLimit,
        isNeedCheck,
        memberNum,
        creator,
        createDate,
        lastModifier,
        lastModDate,
        status
    </sql>
    <insert id="insert" parameterType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        INSERT INTO bas_group (
        groupCode
        ,groupName
        ,introduce
        ,memberLimit
        ,isNeedCheck
        ,memberNum
        ,creator
        ,createDate
        ,lastModifier
        ,lastModDate
        ,status
        ) VALUES (
        #{groupCode}
        ,#{groupName}
        ,#{introduce}
        ,#{memberLimit}
        ,#{isNeedCheck}
        ,#{memberNum}
        ,#{creator}
        ,#{createDate}
        ,#{lastModifier}
        ,#{lastModDate}
        ,#{status}
        )
        <selectKey resultType="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <insert id="insertMap">
        INSERT INTO bas_group (
		    groupCode
		    ,groupName
		    ,introduce
		    ,memberLimit
		    ,isNeedCheck
		    ,memberNum
		    ,creator
		    ,createDate
		    ,lastModifier
		    ,lastModDate
		    ,status
        ) VALUES (
		    	#{map.groupCode}
		    	,#{map.groupName}
		    	,#{map.introduce}
		    	,#{map.memberLimit}
		    	,#{map.isNeedCheck}
		    	,#{map.memberNum}
		    	,#{map.creator}
		    	,#{map.createDate}
		    	,#{map.lastModifier}
		    	,#{map.lastModDate}
		    	,#{map.status}
        )
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO bas_group (
        groupCode
        ,groupName
        ,introduce
        ,memberLimit
        ,isNeedCheck
        ,memberNum
        ,creator
        ,createDate
        ,lastModifier
        ,lastModDate
        ,status
        ) VALUES
        <foreach collection="insertList" item="item" separator=",">
            (
            #{item.groupCode}
            ,#{item.groupName}
            ,#{item.introduce}
            ,#{item.memberLimit}
            ,#{item.isNeedCheck}
            ,#{item.memberNum}
            ,#{item.creator}
            ,#{item.createDate}
            ,#{item.lastModifier}
            ,#{item.lastModDate}
            ,#{item.status}
            )
        </foreach>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        UPDATE bas_group
        <trim prefix="SET" suffixOverrides=",">
            groupCode=#{groupCode},
            groupName=#{groupName},
            introduce=#{introduce},
            memberLimit=#{memberLimit},
            isNeedCheck=#{isNeedCheck},
            memberNum=#{memberNum},
            creator=#{creator},
            createDate=#{createDate},
            lastModifier=#{lastModifier},
            lastModDate=#{lastModDate},
            status=#{status},
        </trim>
        WHERE
        id = #{id}
    </update>


    <!-- 批量更新 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="updateList" item="item" index="index" separator=";">
            UPDATE bas_group
            <trim prefix="SET" suffixOverrides=",">
                groupCode=#{item.groupCode},
                groupName=#{item.groupName},
                introduce=#{item.introduce},
                memberLimit=#{item.memberLimit},
                isNeedCheck=#{item.isNeedCheck},
                memberNum=#{item.memberNum},
                creator=#{item.creator},
                createDate=#{item.createDate},
                lastModifier=#{item.lastModifier},
                lastModDate=#{item.lastModDate},
                status=#{item.status},
            </trim>
            WHERE
            id = #{item.id}
        </foreach>
    </update>

    <update id="updateMap">
        UPDATE bas_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.groupCode!=null">
                groupCode = #{map.groupCode},
            </if>
            <if test="map.groupName!=null">
                groupName = #{map.groupName},
            </if>
            <if test="map.introduce!=null">
                introduce = #{map.introduce},
            </if>
            <if test="map.memberLimit!=null">
                memberLimit = #{map.memberLimit},
            </if>
            <if test="map.isNeedCheck!=null">
                isNeedCheck = #{map.isNeedCheck},
            </if>
            <if test="map.memberNum!=null">
                memberNum = #{map.memberNum},
            </if>
            <if test="map.creator!=null">
                creator = #{map.creator},
            </if>
            <if test="map.createDate!=null">
                createDate = #{map.createDate},
            </if>
            <if test="map.lastModifier!=null">
                lastModifier = #{map.lastModifier},
            </if>
            <if test="map.lastModDate!=null">
                lastModDate = #{map.lastModDate},
            </if>
            <if test="map.status!=null">
                status = #{map.status},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE bas_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.groupCode!=null">
                groupCode = #{update.groupCode},
            </if>
            <if test="update.groupName!=null">
                groupName = #{update.groupName},
            </if>
            <if test="update.introduce!=null">
                introduce = #{update.introduce},
            </if>
            <if test="update.memberLimit!=null">
                memberLimit = #{update.memberLimit},
            </if>
            <if test="update.isNeedCheck!=null">
                isNeedCheck = #{update.isNeedCheck},
            </if>
            <if test="update.memberNum!=null">
                memberNum = #{update.memberNum},
            </if>
            <if test="update.creator!=null">
                creator = #{update.creator},
            </if>
            <if test="update.createDate!=null">
                createDate = #{update.createDate},
            </if>
            <if test="update.lastModifier!=null">
                lastModifier = #{update.lastModifier},
            </if>
            <if test="update.lastModDate!=null">
                lastModDate = #{update.lastModDate},
            </if>
            <if test="update.status!=null">
                status = #{update.status},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.groupCode!=null">
                AND groupCode = #{condition.groupCode}
            </if>
            <if test="condition.groupName!=null">
                AND groupName = #{condition.groupName}
            </if>
            <if test="condition.introduce!=null">
                AND introduce = #{condition.introduce}
            </if>
            <if test="condition.memberLimit!=null">
                AND memberLimit = #{condition.memberLimit}
            </if>
            <if test="condition.isNeedCheck!=null">
                AND isNeedCheck = #{condition.isNeedCheck}
            </if>
            <if test="condition.memberNum!=null">
                AND memberNum = #{condition.memberNum}
            </if>
            <if test="condition.creator!=null">
                AND creator = #{condition.creator}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.lastModifier!=null">
                AND lastModifier = #{condition.lastModifier}
            </if>
            <if test="condition.lastModDate!=null">
                AND lastModDate = #{condition.lastModDate}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
        </trim>
    </update>

    <update id="updateNull" parameterType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        UPDATE bas_group
        <trim prefix="SET" suffixOverrides=",">
            groupCode = #{groupCode},
            groupName = #{groupName},
            introduce = #{introduce},
            memberLimit = #{memberLimit},
            isNeedCheck = #{isNeedCheck},
            memberNum = #{memberNum},
            creator = #{creator},
            createDate = #{createDate},
            lastModifier = #{lastModifier},
            lastModDate = #{lastModDate},
            status = #{status},
        </trim>
        WHERE
        id = #{id}
    </update>


    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>

    <!--根据list(ids)删除对象-->
    <delete id="deleteByIds">
        DELETE FROM bas_group
        WHERE id in
        <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
    </delete>

    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="groupCode!=null">
                AND groupCode = #{groupCode}
            </if>
            <if test="groupName!=null">
                AND groupName = #{groupName}
            </if>
            <if test="introduce!=null">
                AND introduce = #{introduce}
            </if>
            <if test="memberLimit!=null">
                AND memberLimit = #{memberLimit}
            </if>
            <if test="isNeedCheck!=null">
                AND isNeedCheck = #{isNeedCheck}
            </if>
            <if test="memberNum!=null">
                AND memberNum = #{memberNum}
            </if>
            <if test="creator!=null">
                AND creator = #{creator}
            </if>
            <if test="createDate!=null">
                AND createDate = #{createDate}
            </if>
            <if test="lastModifier!=null">
                AND lastModifier = #{lastModifier}
            </if>
            <if test="lastModDate!=null">
                AND lastModDate = #{lastModDate}
            </if>
            <if test="status!=null">
                AND status = #{status}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM bas_group WHERE
        ${property} = #{value}
    </delete>

    <!--查询相关 -->
    <select id="fetch" parameterType="java.lang.Long" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group WHERE
        ${property} = #{value}
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp} id ${condition.id.op} #{condition.id.data}
            </if>
            <if test="condition.groupCode!=null">
                ${condition.groupOp} groupCode ${condition.groupCode.op} #{condition.groupCode.data}
            </if>
            <if test="condition.groupName!=null">
                ${condition.groupOp} groupName ${condition.groupName.op} #{condition.groupName.data}
            </if>
            <if test="condition.introduce!=null">
                ${condition.groupOp} introduce ${condition.introduce.op} #{condition.introduce.data}
            </if>
            <if test="condition.memberLimit!=null">
                ${condition.groupOp} memberLimit ${condition.memberLimit.op} #{condition.memberLimit.data}
            </if>
            <if test="condition.isNeedCheck!=null">
                ${condition.groupOp} isNeedCheck ${condition.isNeedCheck.op} #{condition.isNeedCheck.data}
            </if>
            <if test="condition.memberNum!=null">
                ${condition.groupOp} memberNum ${condition.memberNum.op} #{condition.memberNum.data}
            </if>
            <if test="condition.creator!=null">
                ${condition.groupOp} creator ${condition.creator.op} #{condition.creator.data}
            </if>
            <if test="condition.createDate!=null">
                ${condition.groupOp} createDate ${condition.createDate.op} #{condition.createDate.data}
            </if>
            <if test="condition.lastModifier!=null">
                ${condition.groupOp} lastModifier ${condition.lastModifier.op} #{condition.lastModifier.data}
            </if>
            <if test="condition.lastModDate!=null">
                ${condition.groupOp} lastModDate ${condition.lastModDate.op} #{condition.lastModDate.data}
            </if>
            <if test="condition.status!=null">
                ${condition.groupOp} status ${condition.status.op} #{condition.status.data}
            </if>


        </where>

        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id like CONCAT('%', #{id} , '%')
            </if>
            <if test="groupCode!=null">
                AND groupCode like CONCAT('%', #{groupCode} , '%')
            </if>
            <if test="groupName!=null">
                AND groupName like CONCAT('%', #{groupName} , '%')
            </if>
            <if test="introduce!=null">
                AND introduce like CONCAT('%', #{introduce} , '%')
            </if>
            <if test="memberLimit!=null">
                AND memberLimit like CONCAT('%', #{memberLimit} , '%')
            </if>
            <if test="isNeedCheck!=null">
                AND isNeedCheck like CONCAT('%', #{isNeedCheck} , '%')
            </if>
            <if test="memberNum!=null">
                AND memberNum like CONCAT('%', #{memberNum} , '%')
            </if>
            <if test="creator!=null">
                AND creator like CONCAT('%', #{creator} , '%')
            </if>
            <if test="createDate!=null">
                AND createDate like CONCAT('%', #{createDate} , '%')
            </if>
            <if test="lastModifier!=null">
                AND lastModifier like CONCAT('%', #{lastModifier} , '%')
            </if>
            <if test="lastModDate!=null">
                AND lastModDate like CONCAT('%', #{lastModDate} , '%')
            </if>
            <if test="status!=null">
                AND status like CONCAT('%', #{status} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.groupCode!=null">
                AND groupCode = #{condition.groupCode}
            </if>
            <if test="condition.groupName!=null">
                AND groupName = #{condition.groupName}
            </if>
            <if test="condition.introduce!=null">
                AND introduce = #{condition.introduce}
            </if>
            <if test="condition.memberLimit!=null">
                AND memberLimit = #{condition.memberLimit}
            </if>
            <if test="condition.isNeedCheck!=null">
                AND isNeedCheck = #{condition.isNeedCheck}
            </if>
            <if test="condition.memberNum!=null">
                AND memberNum = #{condition.memberNum}
            </if>
            <if test="condition.creator!=null">
                AND creator = #{condition.creator}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.lastModifier!=null">
                AND lastModifier = #{condition.lastModifier}
            </if>
            <if test="condition.lastModDate!=null">
                AND lastModDate = #{condition.lastModDate}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="cn.thinkjoy.qky.classgroup.domain.bas.BasGroup">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bas_group
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.groupCode!=null">
                AND groupCode = #{condition.groupCode}
            </if>
            <if test="condition.groupName!=null">
                AND groupName = #{condition.groupName}
            </if>
            <if test="condition.introduce!=null">
                AND introduce = #{condition.introduce}
            </if>
            <if test="condition.memberLimit!=null">
                AND memberLimit = #{condition.memberLimit}
            </if>
            <if test="condition.isNeedCheck!=null">
                AND isNeedCheck = #{condition.isNeedCheck}
            </if>
            <if test="condition.memberNum!=null">
                AND memberNum = #{condition.memberNum}
            </if>
            <if test="condition.creator!=null">
                AND creator = #{condition.creator}
            </if>
            <if test="condition.createDate!=null">
                AND createDate = #{condition.createDate}
            </if>
            <if test="condition.lastModifier!=null">
                AND lastModifier = #{condition.lastModifier}
            </if>
            <if test="condition.lastModDate!=null">
                AND lastModDate = #{condition.lastModDate}
            </if>
            <if test="condition.status!=null">
                AND status = #{condition.status}
            </if>
        </trim>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(1) FROM bas_group
        <where>
            <if test="id!=null">
                ${groupOp} id ${id.op} #{id.data}
            </if>
            <if test="groupCode!=null">
                ${groupOp} groupCode ${groupCode.op} #{groupCode.data}
            </if>
            <if test="groupName!=null">
                ${groupOp} groupName ${groupName.op} #{groupName.data}
            </if>
            <if test="introduce!=null">
                ${groupOp} introduce ${introduce.op} #{introduce.data}
            </if>
            <if test="memberLimit!=null">
                ${groupOp} memberLimit ${memberLimit.op} #{memberLimit.data}
            </if>
            <if test="isNeedCheck!=null">
                ${groupOp} isNeedCheck ${isNeedCheck.op} #{isNeedCheck.data}
            </if>
            <if test="memberNum!=null">
                ${groupOp} memberNum ${memberNum.op} #{memberNum.data}
            </if>
            <if test="creator!=null">
                ${groupOp} creator ${creator.op} #{creator.data}
            </if>
            <if test="createDate!=null">
                ${groupOp} createDate ${createDate.op} #{createDate.data}
            </if>
            <if test="lastModifier!=null">
                ${groupOp} lastModifier ${lastModifier.op} #{lastModifier.data}
            </if>
            <if test="lastModDate!=null">
                ${groupOp} lastModDate ${lastModDate.op} #{lastModDate.data}
            </if>
            <if test="status!=null">
                ${groupOp} status ${status.op} #{status.data}
            </if>

        </where>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="selectMaxId" resultType="java.lang.Long">
        SELECT
        MAX(id)
        FROM bas_group
    </select>

</mapper>
